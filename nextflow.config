/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/lncrna Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    toolindex               = "bwamem2"
    fasta                   = "${projectDir}/assets/bovine_index/Xchrom.fa.gz"
    input                   = "${projectDir}/assets/samplesheet.csv"
    bwamem_index                = "${projectDir}/assets/"
    
    sra                        =  true
    input_type                  = 'sra'
    nf_core_pipeline            = 'rnaseq'
    nf_core_rnaseq_strandedness = 'auto'
    ena_metadata_fields         = null
    sample_mapping_fields       = 'experiment_accession,run_accession,sample_accession,experiment_alias,run_alias,sample_alias,experiment_title,sample_title,sample_description,description'
    synapse_config              = null
    force_sratools_download     = false
    skip_fastq_download         = false

    // FASTP
    fastp_qualified_quality_phred = 15 
    fastp_unqualified_percent_limit = 40 
    fastp_trim_poly_g = true
    fastp_length_required = 30

    // References
    genome                     = 'GRCh38'
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    //igenomes_base              = '/home/bianca/Downloads/reference'
    igenomes_ignore            = false
    save_reference             = true
    featurecounts_group_type   = 'gene_biotype'
    gencode                    = false
    fasta                      = '/home/bianca/Downloads/reference/Homo_sapiens/NCBI/GRCh38/Sequence/WholeGenomeFasta/genome.fa.gz'
    gtf                      = '/home/bianca/Downloads/reference/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/GRCh38_latest_genomic.gff.gz'

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // UMI handling
    with_umi                   = false
    skip_umi_extract           = false
    umitools_extract_method    = 'string'
    umitools_grouping_method   = 'directional'
    umitools_dedup_stats       = false
    umitools_bc_pattern        = null
    umitools_bc_pattern2       = null
    umitools_umi_separator     = null
    umi_discard_read           = null
    save_umi_intermeds         = false


    // QC
    skip_qc                    = false
    skip_fastqc                = false
    skip_dupradar              = false
    skip_multiqc               = false
    skip_preseq                = true

    // Trimming
    min_trimmed_reads          = 100
    clip_r1                    = 23
    clip_r2                    = 23
    three_prime_clip_r1        = null
    three_prime_clip_r2        = null
    trim_nextseq               = null
    save_trimmed               = false
    skip_trimming              = false

    // BBSplit genome filtering
    bbsplit_fasta_list         = null
    save_bbsplit_reads         = false
    skip_bbsplit               = true

    // Ribosomal RNA removal
    remove_ribo_rna            = false
    save_non_ribo_reads        = true
    ribo_database_manifest     = "${projectDir}/assets/rrna-db-defaults.txt"

    // Alignment
    skip_alignment             = false
    aligner                    = 'hisat2'
    hisat2_index               = '/home/bianca/Desktop/testresults/genome/index/hisat2/'
    splicesites                = '/home/bianca/Desktop/testresults/genome/index/hisat2/genes.splice_sites.txt'
    hisat2_build_memory        = '20.GB'  // Amount of memory required to build HISAT2 index with splice sites


    save_merged_fastq          = false
    bam_csi_index              = false

    min_mapped_reads           = 5
    save_merged_fastq          = false
    save_unaligned             = false
    save_align_intermeds       = false
    skip_markduplicates        = true

    stringtie_ignore_gtf       = false
    skip_stringtie             = false

    //RANKPROD
    samplesInfo                = "/home/bianca/Downloads/sample2"
    variants                   = "/home/bianca/Downloads/Network_iNET-main/Data/T4D_genes_BIMinput.txt"
    cols= '1,2,3,4'
    rows= '1,2,3,4'
    runRank                   = true
    logged                    = false
    logbase                   = 2
    norm                      = false
    wantgenes                 = false
    numgenes                  = 100
    method                    = 'pval'
    cutoff                    = 0.05
    outdirRank                = '/'

    //RNAVAR options

    read_length                     = 150 // Required for STAR to build index and align reads

    // Alignment
    //aligner                         = 'star'    // Only STAR is currently supported.
    star_twopass                    = true
    star_ignore_sjdbgtf             = false     // Ignore GTF file while creating index or alignment by STAR
    star_max_memory_bamsort         = 0         // STAR parameter limitBAMsortRAM to specify maximum RAM for sorting BAM
    star_bins_bamsort               = 50        // STAR parameter outBAMsortingBinsN to specify number of bins for sorting BAM
    star_max_collapsed_junc         = 1000000   // STAR parameter limitOutSJcollapsed to specify max number of collapsed junctions
    seq_center                      = null
    seq_platform                    = 'illumina' // Required for preparing for BAM headers for GATK to work
    bam_csi_index                   = false
    save_unaligned                  = false
    save_align_intermeds            = false

    // Preprocessing of alignment
    remove_duplicates               = false

    // Variant calling
    no_intervals                    = false

    // Variant annotation
    annotate_tools                  = null  // List of annotation tools to run - snpeff or vep or merge
    annotation_cache                = false // Annotation cache disabled
    cadd_cache                      = null // CADD cache disabled
    cadd_indels                     = null // No CADD InDels file
    cadd_indels_tbi                 = null // No CADD InDels index
    cadd_wg_snvs                    = null // No CADD SNVs file
    cadd_wg_snvs_tbi                = null // No CADD SNVs index
    genesplicer                     = null // genesplicer disabled within VEP
    snpeff_cache                    = null // No directory for snpEff cache
    snpeff_db                       = '/home/bianca/Desktop/vcf_databases/snpeff/snpEff_v4_3_GRCh38.86.zip' // No default db for snpeff
    vep_cache                       = null // No directory for VEP cache
    vep_genome                      = null // No default genome for VEP
    vep_cache_version               = null // No default cache version for VEP

    // Skip steps
    skip_baserecalibration          = true
    skip_intervallisttools          = false
    skip_variantfiltration          = false
    skip_variantannotation          = true

    // GATK intervallist parameters
    gatk_interval_scatter_count     = 25

    //GATK haplotypecaller parameters
    gatk_hc_call_conf               = 20

    //GATK variant filter parameters
    gatk_vf_window_size             = 35
    gatk_vf_cluster_size            = 3
    gatk_vf_fs_filter               = 30.0
    gatk_vf_qd_filter               = 2.0

    //GATK REFERENCE FILES FOR HUMAN
    interval_list                  = '/home/bianca/Downloads/resources_broad_hg38_v0_wgs_calling_regions_hg38_interval_list'
    fasta_fai                      = '/home/bianca/Downloads/resources_broad_hg38_v0_Homo_sapiens_assembly38.fasta.fai'
    fasta_dict                     = '/home/bianca/Downloads/resources_broad_hg38_v0_Homo_sapiens_assembly38.dict'
    //fasta                          = '/home/bianca/Downloads/resources_broad_hg38_v0_Homo_sapiens_assembly38.fasta'


    //ANNOTATEVCF
    exte    ="vcf"
    vcfpass    = ""
    vcfrecode  = "--recode"
    vcf_recode_info_all = "--recode-INFO-all"
    vcf_minall = ""
    vcf_maxall = ""
    vcf_gq = ""
    vcf_dp = ""
    snpeffdb="s3://a-test-bucket-for-nextflow/data/VCF/snpeff/snpEff_v4_3_GRCh38.86.zip"
    assembly="GRCh38.86"
    effect_expression="(ANN[0].EFFECT = '5_prime_UTR_premature_start_codon_gain_variant') | (ANN[0].EFFECT = 'frameshift_variant') | (ANN[0].EFFECT = 'missense_variant') | (ANN[0].EFFECT = 'splice_acceptor_variant') | (ANN[0].EFFECT = 'splice_donor_variant') | (ANN[0].EFFECT = 'splice_region_variant') | (ANN[0].EFFECT = 'start_lost') | (ANN[0].EFFECT = 'stop_gained') | (ANN[0].EFFECT = 'stop_lost')"
    keep_indels="--keep-only-indels"
    keep_snps="--remove-indels"
    snpsiftdb1="s3://a-test-bucket-for-nextflow/data/VCF/snpsift/dbNSFP4.0b1a_hg38_complete.vcf.gz"
    snpsiftdb1_index="s3://a-test-bucket-for-nextflow/data/VCF/snpsift/dbNSFP4.0b1a_hg38_complete.vcf.gz.tbi"
    snpsiftdb2="s3://a-test-bucket-for-nextflow/data/VCF/snpsift/ExAC.r1.sites.vep.hg38.vcf.gz"
    snpsiftdb2_index="s3://a-test-bucket-for-nextflow/data/VCF/snpsift/ExAC.r1.sites.vep.hg38.vcf.gz.tbi"
    cosmicdb="s3://a-test-bucket-for-nextflow/data/VCF/snpsift/hg38_cosmic92_coding.vcf.gz"
    cosmicdb_index="s3://a-test-bucket-for-nextflow/data/VCF/snpsift/hg38_cosmic92_coding.vcf.gz.tbi"
    snpsexpr="(dbNSFP_1000Gp3_AF <= 0.01) & (dbNSFP_ExAC_AF <= 0.01) & (dbNSFP_gnomAD_exomes_AF <= 0.01)"
    indelsexpr="(KG_AF_GLOBAL <= 0.01) & (ESP_AF_GLOBAL <= 0.01) & (AF <= 0.01)"
    //outdir = "s3://a-test-bucket-for-nextflow/a-folder/"
    //outdir = "/home/kevin/Documents/tests/annotatevcf_full_test/"


    // Boilerplate options
    //outdir                     = '/home/administrator/results'
    outdir                     = '/home/bianca/Desktop/testresults/new'
    //outdir                     = 's3://a-test-bucket-for-nextflow/a-folder/'
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false


    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '70.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/lncrna custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/lncrna.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/lncrna profiles: ${params.custom_config_base}/pipeline/lncrna.config")
// }


profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    mamba {
        params.enable_conda    = true
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64 --memory=70G'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 70.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}


// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/lncrna'
    author          = """Bianca Pasat"""
    homePage        = 'https://github.com/nf-core/lncrna'
    description     = """workflow for RNAseq analysis"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

plugins {
    id 'nf-amazon'
}
